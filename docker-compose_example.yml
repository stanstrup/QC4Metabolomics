networks:
  frontend:
    ipam:
      config:
        - subnet: 172.20.0.0/24

services:
  mariadb:
    image: "mariadb"
    networks:
            frontend:
                ipv4_address: 172.20.0.2
    volumes:
      - type: bind
        source: ==path to save the db on your machine==
        target: /var/lib/mysql
    ports:
      - "12345:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: mysql_password
      MYSQL_DATABASE: qc_db
      MYSQL_USER: qc_db_user
      MYSQL_PASSWORD: qc_db_pw
      TZ: Europe/Copenhagen
    command: 'mariadbd --innodb-flush-method=fsync'
    
    
  qc_process:
    networks:
            frontend:
                ipv4_address: 172.20.0.3
    build:
      context: .
      dockerfile: ./setup/Dockerfile
      target: process
    volumes:
        - type: bind
          source: ==path to save the config file on your machine==
          target: /config
        - type: bind
          source: ==base folder where your mzML data is stored==
          target: /data   
    depends_on:
        - mariadb
    restart: always
    environment:
      TZ: Europe/Copenhagen
    command: '/setup/cron_with_env.sh'
    
    
  qc_shiny:
    networks:
            frontend:
                ipv4_address: 172.20.0.4
    build:
      context: .
      dockerfile: ./setup/Dockerfile
      target: shiny
    ports:
      - "80:3838"
    volumes:
        - type: bind
          source: ==path to save the config file on your machine==
          target: /config
        - type: bind
          source: ==base folder where your mzML data is stored==
          target: /data   
    depends_on:
        - mariadb
        - qc_process
    restart: always
    environment:
      TZ: Europe/Copenhagen
    command: '/init'


  ms_converter:
    cap_add:
      - SYS_PTRACE
    networks:
            frontend:
                ipv4_address: 172.20.0.5
    build:
      context: .
      dockerfile: ./setup/Dockerfile_converter
      target: converter
    volumes:
        - type: bind
          source: ==base folder where your raw data is stored==
          target: /data   
    restart: always
    environment:
      TZ: Europe/Copenhagen
      # remember to escape quotes
      msconvert_args: --filter \"scanEvent 1\" --mzML --zlib --64
      msconvert_outdir_prefix: /../mzML
    command: '/setup/cron_with_env.sh'
