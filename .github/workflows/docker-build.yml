name: Build and Push Docker Images

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  REGISTRY: ghcr.io
  IMAGE_BASE: ghcr.io/${{ github.repository_owner }}/qc4metabolomics

jobs:
  check-base-changes:
    name: Check if base image needs rebuild
    runs-on: ubuntu-latest
    outputs:
      base_changed: ${{ steps.check.outputs.base_changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if base dependencies changed
        id: check
        run: |
          echo "Checking if base files changed..."
          git fetch origin ${{ github.event.before }} --depth=1 || true
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} || true)
          echo "$CHANGED"

          if echo "$CHANGED" | grep -E '^(setup/Dockerfile_base|\.Rprofile|renv\.lock|\.env.*|renv/)' > /dev/null; then
            echo "Base dependencies changed"
            echo "base_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No base-related changes"
            echo "base_changed=false" >> "$GITHUB_OUTPUT"
          fi
  build-base:
    name: Build and Push qc_base
    runs-on: ubuntu-latest
    needs: check-base-changes
    if: needs.check-base-changes.outputs.base_changed == 'true'
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push qc_base
        run: |
          docker build -f setup/Dockerfile_base -t qc_base:local -t $IMAGE_BASE/qc_base:latest .
          docker push $IMAGE_BASE/qc_base:latest

  build-process:
    name: Build and Push qc_process
    needs: [check-base-changes, build-base]
    runs-on: ubuntu-latest
    if: always()  # Always run, even if build-base was skipped
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull qc_base from registry
        run: docker pull $IMAGE_BASE/qc_base:latest

      - name: Build and push qc_process
        run: |
          docker build -f setup/Dockerfile --target process -t qc_process:latest .
          docker tag qc_process:latest $IMAGE_BASE/qc_process:latest
          docker push $IMAGE_BASE/qc_process:latest


  build-shiny:
    name: Build and Push qc_shiny
    needs: [check-base-changes, build-base]
    runs-on: ubuntu-latest
    if: always()  # Always run, even if build-base was skipped
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull qc_base from registry
        run: docker pull $IMAGE_BASE/qc_base:latest

      - name: Build and push qc_shiny
        run: |
          docker build -f setup/Dockerfile --target shiny -t qc_shiny:latest .
          docker tag qc_shiny:latest $IMAGE_BASE/qc_shiny:latest
          docker push $IMAGE_BASE/qc_shiny:latest




  build-converter:
    name: Build and Push qc_converter
    needs: [check-base-changes, build-base]
    runs-on: ubuntu-latest
    if: always()  # Always run, even if build-base was skipped
    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push qc_converter
        run: |
          docker build -f setup/Dockerfile_converter --target converter -t qc_converter:latest .
          docker tag qc_converter:latest $IMAGE_BASE/qc_converter:latest
          docker push $IMAGE_BASE/qc_converter:latest
