<article>
<para>
Let's start with a simple HTTPS request:
<r:code>
getURL("https://www.google.com")
</r:code>
We get an error of the form
<r:error>
Error in curlPerform(curl = curl, .opts = opts, .encoding = .encoding) : 
  SSL certificate problem, verify that the CA cert is OK. Details:
error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed
</r:error>
</para>
<para>
Now, let's get the Certification Authority bundle.
You can install this on your operating system 
in one of several ways, e.g.
<sh:exec>
sudo apt-get install ca-certificates
</sh:exec>
Alternatively, we can download the file cacert.pem 
from <ulink url="http://curl.haxx.se/docs/caextract.html"/>
</para>
<para>
Next, we have to tell libcurl to use this.
We do this via the <r:arg>cainfo</r:arg> option.
<r:code>
getURL("https://www.google.com", cainfo = "cacert.pem")
</r:code>
(We can get the real page by following the redirection with 
<r:code>
getURL("https://www.google.com", cainfo = "cacert.pem", follow = TRUE)
</r:code>
)
</para>

<para>
The same applies to reading data from the R mailing list 
site at <ulink url="https://stat.ethz.ch/pipermail/r-help"/>
<r:code>
getURL("https://stat.ethz.ch/pipermail/r-help/")
</r:code>
</para>

<para>
http://ademar.name/blog/2006/04/curl-ssl-certificate-problem-v.html

http://secure.globalsign.net/cacert/sureserverEDU.pem

http://curl.haxx.se/docs/caextract.html
</para>
</article>
