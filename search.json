[{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/connect_to_db_from_R.html","id":"find-the-correct-address-and-port","dir":"Articles","previous_headings":"","what":"Find the correct address and port","title":"Connect to DB in R","text":"Internally (inside docker network) database runs port 3306. host accessible 12345 (unless changed docker compose file). working host directly can access port. server remote need SSH server first. example can forward servers port 12345 port 5555. can now access database locally port 5555.","code":"ssh -L 5555:ADDRESS:12345 USERNAME@ADDRESS"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/connect_to_db_from_R.html","id":"making-the-settings-for-the-database","dir":"Articles","previous_headings":"","what":"Making the settings for the database","title":"Connect to DB in R","text":"Start making copy settings_demo.env. Call example settings_remote.env. Now want edit settings connect server. relevant parameters : local access MS files want paths match can set local path base folder equivalent server seeing.","code":"# database connection  MYSQL_ROOT_PASSWORD=mysql_password  MYSQL_DATABASE=qc_db  MYSQL_USER=qc_db_user  MYSQL_PASSWORD=qc_db_pw  MYSQL_HOST=localhost  MYSQL_PORT=5555 # without trailing slash QC4METABOLOMICS_base=I:/SCIENCE-NEXS-NyMetabolomics/Projects"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/connect_to_db_from_R.html","id":"connect-to-the-database","dir":"Articles","previous_headings":"","what":"Connect to the database","title":"Connect to DB in R","text":"First read settings: can now connect pull data modify database. tables database : cont_cmp cont_data file_info file_schedule files files_ignore log std_compounds std_stat_data std_stat_types","code":"set_QC4Metabolomics_settings_from_file(\"settings_remote.env\") library(MetabolomiQCsR) library(dplyr) library(DBI)  pool <- dbPool_MetabolomiQCs(30)   files <-  paste0(\"                     SELECT * FROM files                     \"                     ) %>%              dbGetQuery(pool,.) %>%              distinct() %>%              as_tibbl"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/demo.html","id":"download-and-compilation","dir":"Articles","previous_headings":"","what":"Download and compilation","title":"Running the demo","text":"Make sure revisit prerequisites front page. First download repository somewhere convenient (/opt). Now need build image require downloading many R packages (pre-compiled image currently available) take . also start demo.","code":"cd /opt sudo git lfs clone https://github.com/stanstrup/QC4Metabolomics.git cd QC4Metabolomics sudo chmod +x ./setup/*.sh docker compose --file docker-compose_demo.yml up --build --force-recreate"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/demo.html","id":"getting-started-with-the-demo","dir":"Articles","previous_headings":"","what":"Getting started with the demo","title":"Running the demo","text":"can now open demo browser visiting localhost. might take minutes can load though since database needs initialized first load. also see plots appear. compounds look defined. First click Contaminants tab. plot appears go get coffee come back reload page (look new compounds every 1 min analyze data). plot available system analyzed demo files. plot appears can try change “Minimum intensity sample” example 103). Now can see common contaminants.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/demo.html","id":"track-specific-compounds","dir":"Articles","previous_headings":"","what":"Track specific compounds","title":"Running the demo","text":"Now want make tracking specific analytes work. go Track compounds –> Compound settings tab. Now fill data track Tryptophan modes. settings need:  Click “Submit” filled form repeat second compound/mode. done look like : Settings track tryptophan minutes able reload browser see data tryptophan “Track compounds” -> “Compound stats” tab.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/demo.html","id":"enabling-email-warnings","dir":"Articles","previous_headings":"","what":"Enabling email warnings","title":"Running the demo","text":"default e-mail warnings , since need supply email server settings send e-mails. can use gmail SMTP server send emails. use gmail need create “app password”, can done gmail account. create password need edit settings “Warner module”. opening file settings_demo.env scrolling section “module: Warner”. First enable module setting QC4METABOLOMICS_module_Warner_enabled. Next need set credentials server. example EMAIL_SENDER YOUR_USER email address account sends emails EMAIL_RECEIVER address email receive emails (can sender). password account password case gmail “app password”. settings needed gmail. now stop QC4Metabolomics (ctrl + C) start using:  Next go “Warning rules” tab setup rules. file matches rules trigger email. emails send soon matching file found, bulk newly found files per file. rule apply files specific Instrument, extracted filename. Next need select statistic monitor. Usually relevant statistics m/z deviation expected (mz_dev_ppm), retention time deviation expected minutes (rt_dev) apex intensity (maxo). choose operator meaning comparison done. “Greater ” (>) typical. Value compare statistic needs chosen finally decided absolute value Value considered instead raw value. check system demo try settings trigger files m/z deviation 30 ppm.  Settings trigger warnings","code":"QC4METABOLOMICS_module_Warner_enabled=TRUE QC4METABOLOMICS_module_Warner_email_from=EMAIL_SENDER QC4METABOLOMICS_module_Warner_email_to=EMAIL_RECEIVER QC4METABOLOMICS_module_Warner_email_user=YOUR_USER QC4METABOLOMICS_module_Warner_email_password=YOUR_PASSWORD QC4METABOLOMICS_module_Warner_email_host=smtp.gmail.com QC4METABOLOMICS_module_Warner_email_port=587 QC4METABOLOMICS_module_Warner_email_use_ssl=TRUE docker compose --file docker-compose_demo.yml up --build --force-recreate"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/file_move.html","id":"purpose","dir":"Articles","previous_headings":"","what":"Purpose","title":"Moving raw files automatically","text":"(file_mover) helper scripts part system . purpose solve situation LC-MS instrument computer reachable QC system can access shared network drive. windows batch script can used copy .raw folders network drive written wait analysis finish. scripts written Waters’ .raw folder used directly anything else.advise using script able double-check make sure backups try . script meant : Monitor run done. check filename (really folder name) expected number delimiters. filename right format file moved (deleted original location!) given location.POTENTIALLY DESTRUCTIVE. BACKUP TESTING!!!script written metabolomics group NEXS therefore specific parsing filename decide destination folder. first string first delimiter used project name project folder create file %infolder%\\test-pro_pos_test-sample-metstd.raw moved %outfolder%\\test-pro.raw\\Data\\test-pro_pos_test-sample-metstd.raw Optionally symlinks can made original location destination folder. way can still access file still original place even actually access destination location. can open file normally instrument software expect file exist original location. Optionally mentioned symlinks can cleared running script (file_mover/clear_symlink_folders.bat).","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/file_move.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"Moving raw files automatically","text":"Copy content file_mover folder instrument computer .raw “files” located. Edit top part win_waters_mover.bat point right folders settings want. infolder outfolder source destination folders respectively. Like QC system file move expects able parse information file name. delim sets character separates information. expect_delims states many delimiters expect filename. used parse files expected filename convention. symlinkback TRUE symbolic link made original location pointing destination location. use symlinks need : Right click Start → Run launch “secpol.msc”. Open “Security Settings” → “Local Policies” → “User Rights Assignment” select “Create symbolic links”. Click “Add User Group…” → enter username system normally uses → click “Check Names” → Click “OK” → Click “OK” Reboot log log (run “gpupdate/force” command-line administrator). Edit monitor_folder.bat point input folder win_waters_mover.bat. Run enable_monitor_at_startup.bat. make folder monitor start reboot. console windows visible worked (reboot). used symlinks can always remove symlinks running clear_symlink_folders.bat. Edit set location first. location infolder win_waters_mover.bat.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/installing_docker_on_redhat.html","id":"installing-docker","dir":"Articles","previous_headings":"","what":"Installing Docker","title":"Installing Docker on RedHat","text":"short summary.","code":"sudo yum remove docker docker-common docker-selinux docker-engine-selinux && docker-engine docker-ce sudo yum install -y yum-utils device-mapper-persistent-data lvm2 sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce sudo systemctl enable docker.service sudo systemctl start docker.service"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/installing_docker_on_redhat.html","id":"install-docker-compose","dir":"Articles","previous_headings":"","what":"Install Docker compose","title":"Installing Docker on RedHat","text":"","code":"sudo yum install epel-release sudo yum install -y python-pip sudo pip install docker-compose"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/installing_docker_on_redhat.html","id":"git-lfs","dir":"Articles","previous_headings":"","what":"git-lfs","title":"Installing Docker on RedHat","text":"","code":"sudo yum install docker git git-lfs"},{"path":[]},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/installing_docker_on_redhat.html","id":"getting-through-firewall-on-linux","dir":"Articles","previous_headings":"Other issues","what":"Getting through firewall on linux","title":"Installing Docker on RedHat","text":"might needed:","code":"systemctl enable firewalld systemctl start firewalld  sudo firewall-cmd --add-port=80/tcp --permanent sudo firewall-cmd --reload sudo systemctl restart docker.service"},{"path":"https://github.com/stanstrup/QC4Metabolomics/articles/troubleshooting.html","id":"get-into-the-containers","dir":"Articles","previous_headings":"","what":"Get into the containers","title":"Troubleshooting","text":"need directly access containers debug can connect bash shell like : following images running: qc4metabolomics-qc_shiny-1 <- runs Shiny frontend qc4metabolomics-qc_process-1 <- runs scheduled data processing qc4metabolomics-mariadb-1 <- runs database qc4metabolomics-ms_converter-1 <- runs automatic conversion raw files db-backup <- runs automatic database backup","code":"docker exec -it qc4metabolomics-qc_process-1 bash"},{"path":"https://github.com/stanstrup/QC4Metabolomics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jan Stanstrup. Maintainer.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stanstrup J (2025). MetabolomiQCsR: QC LC-MS data. R package version 1.6, https://github.com/stanstrup/QC4Metabolomics.","code":"@Manual{,   title = {MetabolomiQCsR: QC for LC-MS data},   author = {Jan Stanstrup},   year = {2025},   note = {R package version 1.6},   url = {https://github.com/stanstrup/QC4Metabolomics}, }"},{"path":"https://github.com/stanstrup/QC4Metabolomics/index.html","id":"qc4metabolomics","dir":"","previous_headings":"","what":"QC for LC-MS data","title":"QC for LC-MS data","text":"QC systems metabolomics studies Documentation can found : https://stanstrup.github.io/QC4Metabolomics/","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"QC for LC-MS data","text":"Docker Docker compose Git git-lfs Everything else downloaded automatically build docker image","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate EIC from a raw matrix — EIC_calc","title":"Calculate EIC from a raw matrix — EIC_calc","text":"Calculate EIC raw matrix observations (scan/mz/intensity combinations).","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate EIC from a raw matrix — EIC_calc","text":"","code":"EIC_calc(tbl, lower, upper, BPI = FALSE)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate EIC from a raw matrix — EIC_calc","text":"tbl tibble containing columns: scan: scan number scan_rt: Retention time scan intensity: intensity observation mz: mz observation lower Lower boundary EIC slice upper Upper boundary EIC slice BPI Logical selecting calculate TIC (FALSE) BPI.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate EIC from a raw matrix — EIC_calc","text":"tbl tibble containing columns: scan: scan number scan_rt: Retention time scan intensity: summed intensity scan given m/z interval","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_contaminants.html","id":null,"dir":"Reference","previous_headings":"","what":"Find EICs that behave like contaminants — EIC_contaminants","title":"Find EICs that behave like contaminants — EIC_contaminants","text":"function looks raw LC-MS data \"features\"/EICs behave like contaminants. Behaving like contaminants case means certain m/z values present min_time intensity min_int.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_contaminants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find EICs that behave like contaminants — EIC_contaminants","text":"","code":"EIC_contaminants(   raw,   bin_ppm = 30,   interval_ppm = 30,   min_time = 5,   merge_corr = 0.9,   merge_ppm = 30,   min_int = 5000 )"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_contaminants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find EICs that behave like contaminants — EIC_contaminants","text":"raw xcmsRaw object profile bin_ppm Tolerance (ppm) initial binning m/z values interval_ppm Tolerance creating final EICs merging similar bins min_time Minimum time (minutes) EIC min_int considered contaminant. merge_corr Minimum correlation EICs merged. merge_ppm Maximum difference (ppm) EICs merged. min_int Minimum intensity EIC needs minimum min_time.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/EIC_contaminants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find EICs that behave like contaminants — EIC_contaminants","text":"tibble containing columns: mz: m/z proposed contaminant EIC: EIC m/z.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/closest_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match list of standards to peak table — closest_match","title":"Match list of standards to peak table — closest_match","text":"function match table standard compounds peak table m/z retention time. one possible hit highest intensity peak chosen.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/closest_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match list of standards to peak table — closest_match","text":"","code":"closest_match(   stds,   peakTable,   rt_tol = 0.25,   mz_ppm = 30,   rt_col = \"rt\",   mz_col = \"mz\",   int_col = \"into\" )"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/closest_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match list of standards to peak table — closest_match","text":"stds tibble standards match peak table peakTable tibble containing peak table supplied findPeaks (converted tibble/data.frame). rt_tol Retention time tolerance matching peaks. Pay attention unit tables. rt_tol match stds peakTable use units (.e. minutes seconds). mz_ppm ppm matching peaks. rt_col Character string giving column containing retention times. Must standards peak table. mz_col Character string giving column containing m/z values. Must standards peak table. int_col Character string giving column containing intensities peak table.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/closest_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match list of standards to peak table — closest_match","text":"vector length equivalent number rows stds giving indices hits peakTable.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/dbPool_MetabolomiQCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write message to QC4Metabolomics db — dbPool_MetabolomiQCs","title":"Write message to QC4Metabolomics db — dbPool_MetabolomiQCs","text":"Write message QC4Metabolomics db","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/dbPool_MetabolomiQCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write message to QC4Metabolomics db — dbPool_MetabolomiQCs","text":"","code":"dbPool_MetabolomiQCs(idleTimeout = 1)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/dbPool_MetabolomiQCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write message to QC4Metabolomics db — dbPool_MetabolomiQCs","text":"idleTimeout number minutes idle object kept pool destroyed.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/dbPool_MetabolomiQCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write message to QC4Metabolomics db — dbPool_MetabolomiQCs","text":"dbPool object connect MetabolomiQC database using settings ini file.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/default_time_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove files that no longer exist from the database — default_time_range","title":"Remove files that no longer exist from the database — default_time_range","text":"Return giving dates corresponding last min_samples number samples, least samples last min_weeks weeks.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/default_time_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove files that no longer exist from the database — default_time_range","text":"","code":"default_time_range(min_weeks = 2, min_samples = 200, pool = NULL)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/default_time_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove files that no longer exist from the database — default_time_range","text":"min_weeks vector saying minimum number weeks return samples . min_samples vector saying many samples minimum return. Always returns samples min_weeks period. pool (see pool package) use writing. null new connection made reading connection details conf file.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/default_time_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove files that no longer exist from the database — default_time_range","text":"Named vector (min, max) POSIXct times.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/extract_polarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract polarity from xcmsRaw object. — extract_polarity","title":"Extract polarity from xcmsRaw object. — extract_polarity","text":"Extracts polarity xcmsRaw object. polarity found majority scans returned.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/extract_polarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract polarity from xcmsRaw object. — extract_polarity","text":"","code":"extract_polarity(xraw)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/extract_polarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract polarity from xcmsRaw object. — extract_polarity","text":"xraw xcmsRaw object extract polarity .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/extract_polarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract polarity from xcmsRaw object. — extract_polarity","text":"character string giving polarity. Can \"positive\", \"negative\", \"unknown\".","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/getEIC_C_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate EICs from a raw matrix using XCMS C function — getEIC_C_wrap","title":"Calculate EICs from a raw matrix using XCMS C function — getEIC_C_wrap","text":"Calculate EICs raw matrix observations (scan/mz/intensity combinations). Can calculate several ranges time","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/getEIC_C_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate EICs from a raw matrix using XCMS C function — getEIC_C_wrap","text":"","code":"getEIC_C_wrap(xraw_values, range_tbl)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/getEIC_C_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate EICs from a raw matrix using XCMS C function — getEIC_C_wrap","text":"xraw_values data.frame/tibble containing columns: scan: scan number scan_rt: Retention time scan intensity: intensity observation mz: m/z observation range_tbl data.frame/tibble columns lower upper (\"mz_lower\",\"mz_upper\") m/z boundaries EIC slice(s).","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/getEIC_C_wrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate EICs from a raw matrix using XCMS C function — getEIC_C_wrap","text":"tbl tibble containing columns: scan: scan number scan_rt: Retention time scan intensity: summed intensity scan given m/z interval","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_EICs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get EICs from xcmsRaw object — get_EICs","title":"Get EICs from xcmsRaw object — get_EICs","text":"Takes xcmsRaw object extracts EICs. Can multiple ranges exclude certain masses unlike getEIC. Can used extract TIC .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_EICs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get EICs from xcmsRaw object — get_EICs","text":"","code":"get_EICs(   xraw,   range_tbl,   exclude_mz = NULL,   exclude_ppm = 30,   range_tbl_cols = c(\"mz_lower\", \"mz_upper\"),   BPI = FALSE,   min_int = 0 )"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_EICs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get EICs from xcmsRaw object — get_EICs","text":"xraw xcmsRaw object get EIC(s)/TIC . range_tbl data.frame/tibble columns lower upper m/z boundaries EIC slice(s). exclude_mz Masses exclude EIC. useful remove contaminants TICs. exclude_ppm ppm tolerance exclude_mz range_tbl_cols columns range_tbl holds lower upper range. defaults c(\"mz_lower\",\"mz_upper\"). BPI Logical selecting calculate TIC (FALSE) BPI. min_int minimum intensity mass peak include","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_EICs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get EICs from xcmsRaw object — get_EICs","text":"tbl tibble containing columns: scan: scan number scan_rt: Retention time scan intensity: summed intensity scan given m/z interval","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_QC4Metabolomics_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table with QC4metabolomics settings — get_QC4Metabolomics_settings","title":"Get table with QC4metabolomics settings — get_QC4Metabolomics_settings","text":"Get table QC4metabolomics settings","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_QC4Metabolomics_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table with QC4metabolomics settings — get_QC4Metabolomics_settings","text":"","code":"get_QC4Metabolomics_settings(modules = NULL)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_QC4Metabolomics_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table with QC4metabolomics settings — get_QC4Metabolomics_settings","text":"modules character strong. Get settings selected modules.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_QC4Metabolomics_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get table with QC4metabolomics settings — get_QC4Metabolomics_settings","text":"tbl tibble containing columns: name: name setting value: value settin module: module setting belongs .","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_cont_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of known contaminants — get_cont_list","title":"Get list of known contaminants — get_cont_list","text":"Get list known contaminants","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_cont_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of known contaminants — get_cont_list","text":"","code":"get_cont_list(polarity = c(\"positive\", \"negative\", \"unknown\"), type = \"URL\")"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_cont_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of known contaminants — get_cont_list","text":"polarity polarity get contaminants . Can \"positive\", \"negative\" \"unknown\". \"unknown\" list specified MetabolomiQCs.conf used. MetabolomiQCs.conf can working folder home folder. found package default used (unknown used positive mode list). type using local remote. \"URL\" implemented downloads list https://github.com/stanstrup/common_mz","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_cont_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of known contaminants — get_cont_list","text":"tbl tibble containing columns: Monoisotopic ion mass (singly charged): m/z contaminant Ion type: Notation adduct/fragment type Formula M subunit sequence: Molecular formula Compound ID species: Name compound Possible origin comments: Suggestion origin contaminant References: Reference contaminant","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/get_cont_list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get list of known contaminants — get_cont_list","text":"https://github.com/stanstrup/common_mz","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw data into a tibble of xcmsRaw objects. — ic_boxes","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_boxes","text":"Convert raw data tibble xcmsRaw objects.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_boxes","text":"","code":"ic_boxes(token)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_boxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_boxes","text":"token character vector containing ICMeter token","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_boxes","text":"data.frame containing information box registered token account","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_measurements.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw data into a tibble of xcmsRaw objects. — ic_measurements","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_measurements","text":"Convert raw data tibble xcmsRaw objects.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_measurements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_measurements","text":"","code":"ic_measurements(token, boxQR, fromDate, toDate)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_measurements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_measurements","text":"token character vector containing ICMeter token boxQR character vector containing QR code box want query fromDate starting date draw data toDate ending date draw data . maximum one month can draw time.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_measurements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_measurements","text":"data.frame holding data drawn","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw data into a tibble of xcmsRaw objects. — ic_token","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_token","text":"Convert raw data tibble xcmsRaw objects.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_token","text":"","code":"ic_token(user, pass)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_token","text":"user ICMeter username pass ICMeter password","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/ic_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw data into a tibble of xcmsRaw objects. — ic_token","text":"character vector containing ICMeter token","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse filenames from given string — parse_filenames","title":"Parse filenames from given string — parse_filenames","text":"Parse filenames given string","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse filenames from given string — parse_filenames","text":"","code":"parse_filenames(filenames, filenamemask)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse filenames from given string — parse_filenames","text":"filenames Character string filenames parse. filenamemask Filename mask. Variables capture inclosed \"%\". See examples","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse filenames from given string — parse_filenames","text":"data.frame fields parsed filenames","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parse filenames from given string — parse_filenames","text":"Stinus Lindgreen, sldg@steno.dk; Jan Stanstrup, jpzs@steno.dk","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/parse_filenames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse filenames from given string — parse_filenames","text":"","code":"testfilenames <- c(\"RemoveThis_METSY_sample1___17-random_AndThis.txt\",                    \"RemoveThis_METSY_sample2___21-something_AndThis.txt\",                    \"RemoveThis_METSY_sample3___123-blah_AndThis.txt\",                    \"RemoveThis_JDRF_SameName___1-dummyA_AndThis.txt\",                    \"RemoveThis_JDRF_SameName___2-dummyB_AndThis.txt\",                    \"RemoveThis_JDRF_SameName___3-dummyC_AndThis.txt\",                    \"RemoveThis_this_file___name-is_wrong\",                    \"RemoveThis_and_this_AndThis.txt\",                    \"RemoveThis_this_one___should-work\",                    \"RemoveThis_how_about___this_-_one_AndThis.txt\"                   )  defaultmask   <- \"RemoveThis_%study%_%name%___%rep%-%dummy%_AndThis.txt\"  parse_filenames(testfilenames,defaultmask) #>                                               filename study     name   rep #> 1     RemoveThis_METSY_sample1___17-random_AndThis.txt METSY  sample1    17 #> 2  RemoveThis_METSY_sample2___21-something_AndThis.txt METSY  sample2    21 #> 3      RemoveThis_METSY_sample3___123-blah_AndThis.txt METSY  sample3   123 #> 4      RemoveThis_JDRF_SameName___1-dummyA_AndThis.txt  JDRF SameName     1 #> 5      RemoveThis_JDRF_SameName___2-dummyB_AndThis.txt  JDRF SameName     2 #> 6      RemoveThis_JDRF_SameName___3-dummyC_AndThis.txt  JDRF SameName     3 #> 7                 RemoveThis_this_file___name-is_wrong  <NA>     <NA>  <NA> #> 8                      RemoveThis_and_this_AndThis.txt  <NA>     <NA>  <NA> #> 9                    RemoveThis_this_one___should-work  <NA>     <NA>  <NA> #> 10       RemoveThis_how_about___this_-_one_AndThis.txt   how    about this_ #>        dummy  FLAG #> 1     random FALSE #> 2  something FALSE #> 3       blah FALSE #> 4     dummyA FALSE #> 5     dummyB FALSE #> 6     dummyC FALSE #> 7       <NA>  TRUE #> 8       <NA>  TRUE #> 9       <NA>  TRUE #> 10      _one FALSE"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/peak_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","title":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","text":"Calculate Tailing Factor Asymmetry Factor","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/peak_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","text":"","code":"peak_factor(EIC, rt, factor = \"TF\")"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/peak_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","text":"EIC EIC containing peak calculate . tibble produced get_EICs. rt Retention time center peak (Numeric) factor calculate. Character string either \"TF\" (Tailing Factor) \"ASF\" (Asymmetry Factor).","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/peak_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","text":"Numeric","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/peak_factor.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Tailing Factor and Asymmetry Factor — peak_factor","text":"http://www.chromforum.org/viewtopic.php?t=20079","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_chrom.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot chromatogram — plot_chrom","title":"Plot chromatogram — plot_chrom","text":"Plot chromatogram","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_chrom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot chromatogram — plot_chrom","text":"","code":"plot_chrom(tbl, RT_col = \"RT\", Intensity_col = \"Intensity\")"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_chrom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot chromatogram — plot_chrom","text":"tbl tbl retention time intensity plot RT_col Name rentention time column Intensity_col Name intensity column","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_chrom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot chromatogram — plot_chrom","text":"ggplot object.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_contaminants.html","id":null,"dir":"Reference","previous_headings":"","what":"Bar plot of contaminants — plot_contaminants","title":"Bar plot of contaminants — plot_contaminants","text":"Bar plot contaminants","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_contaminants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bar plot of contaminants — plot_contaminants","text":"","code":"plot_contaminants(   data,   title,   x_var = \"comp_name\",   y_var = \"EIC_median\",   y_lab = \"Median EIC\" )"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_contaminants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bar plot of contaminants — plot_contaminants","text":"data tbl contamination amounts title Plot title x_var Column name holds compound/contaminant names y_var Column name holds compound/contaminant values y_lab Y-axis label","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plot_contaminants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bar plot of contaminants — plot_contaminants","text":"ggplot object.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plotly_clean_tt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make replacements in plotly tooltips — plotly_clean_tt","title":"Make replacements in plotly tooltips — plotly_clean_tt","text":"Make replacements plotly tooltips","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plotly_clean_tt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make replacements in plotly tooltips — plotly_clean_tt","text":"","code":"plotly_clean_tt(plotly, rep)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plotly_clean_tt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make replacements in plotly tooltips — plotly_clean_tt","text":"plotly plotly object. rep named character vector. Names text replace string replacement string.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/plotly_clean_tt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make replacements in plotly tooltips — plotly_clean_tt","text":"plotly object.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/rem_dead_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove files that no longer exist from the database — rem_dead_files","title":"Remove files that no longer exist from the database — rem_dead_files","text":"Remove files longer exist database","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/rem_dead_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove files that no longer exist from the database — rem_dead_files","text":"","code":"rem_dead_files(file_md5, path, pool = NULL, log_source)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/rem_dead_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove files that no longer exist from the database — rem_dead_files","text":"file_md5 vector giving md5 files check. path vector giving relative path files check. pool (see pool package) use writing. null new connection made reading connection details conf file.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/rem_dead_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove files that no longer exist from the database — rem_dead_files","text":"Database change logical vector saying files existed.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/set_QC4Metabolomics_settings_from_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Set QC4metabolomics settings form env file — set_QC4Metabolomics_settings_from_file","title":"Set QC4metabolomics settings form env file — set_QC4Metabolomics_settings_from_file","text":"Set QC4metabolomics settings form env file","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/set_QC4Metabolomics_settings_from_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set QC4metabolomics settings form env file — set_QC4Metabolomics_settings_from_file","text":"","code":"set_QC4Metabolomics_settings_from_file(file)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/set_QC4Metabolomics_settings_from_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set QC4metabolomics settings form env file — set_QC4Metabolomics_settings_from_file","text":"file character string filename env file","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/tbl2ROI.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of peaks (rt / m/z pairs) to a Region of Interest (ROI) list for use with findPeaks — tbl2ROI","title":"Convert a list of peaks (rt / m/z pairs) to a Region of Interest (ROI) list for use with findPeaks — tbl2ROI","text":"Convert list peaks (rt / m/z pairs) Region Interest (ROI) list use findPeaks","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/tbl2ROI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of peaks (rt / m/z pairs) to a Region of Interest (ROI) list for use with findPeaks — tbl2ROI","text":"","code":"tbl2ROI(tbl, raw, ppm, rt_tol)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/tbl2ROI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of peaks (rt / m/z pairs) to a Region of Interest (ROI) list for use with findPeaks — tbl2ROI","text":"tbl tibble containing columns \"rt\" \"mz\". rt needs seconds. raw xcmsRaw object create ROI . needs specific xcmsRaw match retention times scan nubmers. ppm ppm tolerance generated ROI. rt_tol Retention time tolerance (sec!) generated ROI.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/tbl2ROI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of peaks (rt / m/z pairs) to a Region of Interest (ROI) list for use with findPeaks — tbl2ROI","text":"List containing ROIs. list contains mz, mzmin, mzmax, scmin, scmax, length (set -1, used centWave) intensity (set -1, used centWave) columns.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/write_to_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Write message to QC4Metabolomics db — write_to_log","title":"Write message to QC4Metabolomics db — write_to_log","text":"Write message QC4Metabolomics db","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/write_to_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write message to QC4Metabolomics db — write_to_log","text":"","code":"write_to_log(msg, cat, source, pool = NULL)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/write_to_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write message to QC4Metabolomics db — write_to_log","text":"msg message. character vector. cat category (\"info\", \"warning\" \"error\"). character vector. pool (see pool package) use writing. null new connection made reading connection details conf file.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/write_to_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write message to QC4Metabolomics db — write_to_log","text":"Nothing. Written db.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/xcmsRaw_to_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert raw data into a tibble of xcmsRaw objects. — xcmsRaw_to_tbl","title":"Convert raw data into a tibble of xcmsRaw objects. — xcmsRaw_to_tbl","text":"Convert raw data tibble xcmsRaw objects.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/xcmsRaw_to_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert raw data into a tibble of xcmsRaw objects. — xcmsRaw_to_tbl","text":"","code":"xcmsRaw_to_tbl(files, ...)"},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/xcmsRaw_to_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert raw data into a tibble of xcmsRaw objects. — xcmsRaw_to_tbl","text":"files character vector file names/paths. ... arguments xcmsRaw.","code":""},{"path":"https://github.com/stanstrup/QC4Metabolomics/reference/xcmsRaw_to_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert raw data into a tibble of xcmsRaw objects. — xcmsRaw_to_tbl","text":"tibble containing columns: file: Filename without path. polarity: Character string \"positive\", \"negative\", \"unknown\". raw: xcmsRaw objects. path: input path (files).","code":""}]
